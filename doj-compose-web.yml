version: "2"

services:
    mariadb:
        image: mariadb
        restart: unless-stopped
        networks:
            - net
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
            - MYSQL_ROOT_PASSWORD=root
        volumes:
            - ./mysql:/var/lib/mysql
        container_name: "mariadb"
    web:
        image: doj:latest
        restart: unless-stopped
        container_name: "web"
        volumes:
            - ./config:/opt/doj/config
            - ./data:/opt/doj/data
            - ./data:/opt/doj/web/uploads
        working_dir: /opt/doj/web
        networks:
            - net
        depends_on:
            - mariadb
            - redis
            - judge-daemon-1
            - judge-daemon-2
        ports:
            - 80:8080
        entrypoint: node app.js -c /opt/doj/config/web.json
    redis:
        image: redis
        restart: unless-stopped
        container_name: "redis"
        networks:
            - net
        command: ["redis-server", "--appendonly", "yes"]
    judge-daemon-1:
        image: doj:latest
        restart: unless-stopped
        container_name: "judge-daemon-1"
        working_dir: /opt/doj/judge/lib/daemon
        volumes:
            - ./config:/opt/doj/config
            - ./data:/opt/doj/data
            - ./sandbox:/opt/doj/sandbox
        networks:
            - net
        command: node index.js -c /opt/doj/config/daemon.json
    judge-runner-1:
        image: doj:latest
        restart: unless-stopped
        container_name: "judge-runner-1"
        working_dir: /opt/doj/judge/lib/runner
        volumes:
            - ./config:/opt/doj/config
            - ./data:/opt/doj/data
            - ./sandbox:/opt/doj/sandbox
        networks:
            - net
        entrypoint: node index.js -s /opt/doj/config/runner-shared.json -i /opt/doj/config/runner-instance-1.json
        privileged: true
    judge-daemon-2:
        image: doj:latest
        restart: unless-stopped
        container_name: "judge-daemon-2"
        working_dir: /opt/doj/judge/lib/daemon
        volumes:
            - ./config:/opt/doj/config
            - ./data:/opt/doj/data
            - ./sandbox:/opt/doj/sandbox
        networks:
            - net
        command: node index.js -c /opt/doj/config/daemon.json
    judge-runner-2:
        image: doj:latest
        restart: unless-stopped
        container_name: "judge-runner-2"
        working_dir: /opt/doj/judge/lib/runner
        volumes:
            - ./config:/opt/doj/config
            - ./data:/opt/doj/data
            - ./sandbox:/opt/doj/sandbox
        networks:
            - net
        entrypoint: node index.js -s /opt/doj/config/runner-shared.json -i /opt/doj/config/runner-instance-2.json
        privileged: true
    rabbitmq:
        image: rabbitmq
        restart: unless-stopped
        container_name: "rabbitmq"
        networks:
            - net
    # proxy:
    #     restart: unless-stopped
    #     build:
    #         context: "./nginx-proxy"
    #     container_name: "nginx-proxy"
    #     ports:
    #         - "80:80"
    #     networks:
    #         - net
    #     volumes:
    #         - /var/run/docker.sock:/tmp/docker.sock:ro
networks:
    net: